// <auto-generated />
using AdPlayTest_Pias.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AdPlayTestPias.Migrations
{
    [DbContext(typeof(ChinookDbContext))]
    partial class ChinookDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AdPlayTest_Pias.Models.Genre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("GenreName")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(30)");

                    b.HasKey("Id");

                    b.ToTable("Genres");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            GenreName = "GenreName 1"
                        },
                        new
                        {
                            Id = 2,
                            GenreName = "GenreName 2"
                        },
                        new
                        {
                            Id = 3,
                            GenreName = "GenreName 3"
                        });
                });

            modelBuilder.Entity("AdPlayTest_Pias.Models.Track", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("ComposerName")
                        .HasColumnType("varchar(30)");

                    b.Property<int>("GenreId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(30)");

                    b.HasKey("Id");

                    b.HasIndex("GenreId");

                    b.ToTable("Tracks");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            ComposerName = "ComposerName 1",
                            GenreId = 1,
                            Name = "Track 1"
                        },
                        new
                        {
                            Id = 2L,
                            ComposerName = "ComposerName 2",
                            GenreId = 1,
                            Name = "Track 2"
                        },
                        new
                        {
                            Id = 3L,
                            ComposerName = "ComposerName 3",
                            GenreId = 2,
                            Name = "Track 3"
                        },
                        new
                        {
                            Id = 4L,
                            ComposerName = "ComposerName 4",
                            GenreId = 1,
                            Name = "Track 4"
                        },
                        new
                        {
                            Id = 5L,
                            ComposerName = "ComposerName 5",
                            GenreId = 3,
                            Name = "Track 5"
                        },
                        new
                        {
                            Id = 6L,
                            ComposerName = "ComposerName 6",
                            GenreId = 1,
                            Name = "Track 6"
                        });
                });

            modelBuilder.Entity("AdPlayTest_Pias.Models.Track", b =>
                {
                    b.HasOne("AdPlayTest_Pias.Models.Genre", "Genre")
                        .WithMany("Tracks")
                        .HasForeignKey("GenreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Genre");
                });

            modelBuilder.Entity("AdPlayTest_Pias.Models.Genre", b =>
                {
                    b.Navigation("Tracks");
                });
#pragma warning restore 612, 618
        }
    }
}
